<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="1">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if(pressedKeys &amp; $01) &amp;&amp; taunting==false &amp;&amp; omnomnomnom==false {
    if taunting==false &amp;&amp; !invisible &amp;&amp; cloakAlpha == 1 taunting=true;
    if team==TEAM_RED {
        tauntindex=0;
        tauntend=tauntlength-1;
    }
    else if team==TEAM_BLUE {
        tauntindex=tauntlength;
        tauntend=tauntlength*2-1;
    }
    image_speed=tauntspeed;
} 

if(pressedKeys &amp; $80) &amp;&amp; taunting==false &amp;&amp; omnomnomnom==false &amp;&amp; jumpStrength&gt;0{
    if(not place_free(x,y+1) &amp;&amp; place_free(x,y)) {
        if canCloak {
            if currentWeapon.readyToStab==true {
                playsound(x,y,JumpSnd);
                vspeed = -jumpStrength;
            }
        }
        else {
            playsound(x,y,JumpSnd);
            vspeed = -jumpStrength;
        }
    }
    else if((canDoublejump == 1) and (doublejumpUsed == 0) and (vspeed&gt;-jumpStrength)) {
        vspeed = -jumpStrength;
        playsound(x,y,JumpSnd);
        doublejumpUsed = 1;
        moveStatus = 0;
    }
}
  
xoffset = view_xview[0];
yoffset = view_yview[0];
xsize = view_wview[0];
ysize = view_hview[0];
   
if(keyState &amp; $10)  &amp;&amp; taunting==false &amp;&amp; omnomnomnom==false {
    if (global.isHost==true) || (global.isHost==false &amp;&amp; distance_to_point(xoffset+xsize/2,yoffset+ysize/2) &lt; 1600) || (player.class == CLASS_DEMOMAN) with(currentWeapon) event_user(1);
} else {
    with(currentWeapon) event_user(3);
}
    
// Right click
if(keyState &amp; $08) &amp;&amp; (taunting==false || player.class == CLASS_DEMOMAN) &amp;&amp; omnomnomnom==false{
    if (global.isHost==true) || (distance_to_point(xoffset+xsize/2,yoffset+ysize/2) &lt; 1600) with(currentWeapon) event_user(2);
}

// Cloak
if ((pressedKeys &amp; $08) &amp;&amp; canCloak &amp;&amp; ((cloakAlpha &lt;= 0.5 and cloak) || (cloakAlpha == 1 and !cloak)) &amp;&amp; !intel  &amp;&amp; taunting==false &amp;&amp; !(keyState &amp; $10)) {
    cloak = !cloak;
}

if moveStatus == 1 speedfactor = 0.65;
else if moveStatus == 2 speedfactor = 0.17;
else if moveStatus == 3 speedfactor = 0.1;
else speedfactor = 0.85;

if (intel) &amp;&amp; speedfactor &gt; 0.75 speedfactor = 0.75;

if(speedfactor&lt;0.7) {
    if !variable_local_exists("jumpFlameParticleType") &amp;&amp; moveStatus != 3 {
        jumpFlameParticleType = part_type_create();
        part_type_sprite(jumpFlameParticleType,FlameS,true,false,true);
        part_type_alpha2(jumpFlameParticleType,1,0.3);
        part_type_life(jumpFlameParticleType,2,5);
        part_type_scale(jumpFlameParticleType,0.7,-0.65);
    }
    
    if !variable_global_exists("jumpFlameParticleSystem") &amp;&amp; moveStatus != 3 {
        global.jumpFlameParticleSystem = part_system_create();
        part_system_depth(global.jumpFlameParticleSystem, 10);
    }

    if(vspeed&lt;0) {
        vspeed-=0.1;
        if(global.particles == PARTICLES_NORMAL) {
            if(speedfactor&gt;0.1 and (random(10)/10)&gt; speedfactor) {
                effect_create_below(ef_smoke,x-hspeed*1.2,y-vspeed*1.2+20,0,c_gray);
            }
        }
        if speedfactor &gt; 0.3 {
            if(global.particles == PARTICLES_NORMAL or global.particles == PARTICLES_ALTERNATIVE) {
                  if(random(7)&lt;5) {
                        part_particles_create(global.jumpFlameParticleSystem,x,y+19,jumpFlameParticleType,1);
                  }
            }   
        }
    } else { 
        moveStatus = 0;
        //if(variable_local_exists("jumpFlameParticleType")) {
            //part_type_destroy(jumpFlameParticleType);
        //}
    }
}

if(keyState &amp; $40)  &amp;&amp; taunting==false &amp;&amp; omnomnomnom==false{
    if !canCloak hspeed -= runPower*speedfactor;
    else if currentWeapon.readyToStab==true hspeed -= runPower*speedfactor;
}
    
if(keyState &amp; $20)  &amp;&amp; taunting==false &amp;&amp; omnomnomnom==false{   
    if !canCloak hspeed += runPower*speedfactor;
    else if currentWeapon.readyToStab==true hspeed += runPower*speedfactor;
}

if(pressedKeys &amp; $04) {
    setChatBubble(player, 45);
}
    
// flame bubble
if flamecount&gt;0 &amp;&amp; player.class != CLASS_PYRO &amp;&amp; random(80) &lt;= 1 {
    setChatBubble(player, 49);
}
    
pressedKeys = 0;
releasedKeys = 0;
    
if (moveStatus = 2) {
    hspeed/=1.04;
} else {
    if (moveStatus = 3) {
        hspeed/=1.002;
    } else {
    hspeed/=1.15; 
    }
} 

if(abs(hspeed)&lt;0.2 /*and not moveStatus = 3*/) {
    hspeed=0;
    animationImage=0;
}    
    
if(place_free(x,y+1)) {
    vspeed += 0.6;
    if(vspeed&gt;10) {
        vspeed=10;
    }
    animationImage = 1;
} else {
//moveStatus = 0; 
    if(place_free(x,y)) {
        doublejumpUsed = 0;
    }
}
    
if(speed&gt;15) {
    speed=15;
}
    
if intel { 
    if random(1)&gt;0.90 &amp;&amp; speed&gt;2 {
        var sheet;
        sheet = instance_create(x,y-11+random(9),LooseSheet);
        sheet.hspeed = hspeed;
    }
    if cloak==true {
        cloak=false;
        cloakAplha=1;
    }
}
    
animationImage = (animationImage+abs(hspeed)/20) mod CHARACTER_ANIMATION_LEN;

if collision_point(x,y,SpawnRoom,0,0) player.quickspawn = 1;
else player.quickspawn=0;
    
// drop intel if ubered
if(intel) &amp;&amp; ubered == 1 {
    event_user(5);
}

//gotta regenerate some nuts
if nutsNBolts &lt; 100 nutsNBolts += 0.1;
else if nutsNBolts &gt; 100 nutsNBolts = 100;

//ubered max out ammo
if ubered == 1 {
    if instance_exists(currentWeapon) {
        if currentWeapon.object_index == Rocketlauncher {
            currentWeapon.ammoCount = 4;
            currentWeapon.alarm[5] = -1;
        }
        else if currentWeapon.object_index == Scattergun {
            currentWeapon.ammoCount = 6;
            currentWeapon.alarm[5] = -1;
        }
        else if currentWeapon.object_index == Flamethrower {
            currentWeapon.ammoCount = 200;
        }
        else if currentWeapon.object_index == Shotgun {
            currentWeapon.ammoCount = 8;
            currentWeapon.alarm[5] = -1;
        }
        else if currentWeapon.object_index == Revolver {
            currentWeapon.ammoCount = 6;
            currentWeapon.alarm[5] = -1;
        }
        else if currentWeapon.object_index == Minigun {
            currentWeapon.ammoCount = 200;
        }
        else if currentWeapon.object_index == Minegun {
            currentWeapon.ammoCount = 8;
            currentWeapon.alarm[5] = -1;
        }
        else if currentWeapon.object_index == Blade {
            currentWeapon.ammoCount = 200;
        }
        else if currentWeapon.object_index == Medigun {
            currentWeapon.ammoCount = 40;
            currentWeapon.alarm[5] = -1;
        }
    }
}

// Determine if the character is capturing a CP, and which
var zone;
zone = collision_point(x,y,CaptureZone,0,0);

if(zone&gt;=0 &amp;&amp; !cloak) {
    cappingPoint = zone.cp;
} else {
    cappingPoint = noone;
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
